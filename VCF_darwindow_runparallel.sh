#!/bin/bash
# script to run VCF_windowhe_multisamples_darwindow.sh per scaffold, in order to speed up the analyses.

# WARNING: this script runs as many parallel analyses (and creates as many output directories) as there are lines in the file mylongcontigs.txt
# WARNING: It is up to the user to ensure that the file mylongcontigs.txt contains at maximum 30 or 40 lines or so (i.e., ideally the number of chromosomes)
# WARNING: Following the usage instructions carefully to avoid overloading the system and/or creating and/or overwriting directories unwanted

# expects to find in working directory the following files:
# - VCF_darwindow.sh, with full path (!!) of input VCF file specified to the MYVCF variable. 
# - mylongcontigs.txt
# - myvcfsamples.txt
# - mycontiglengths.txt
# - mywindowheader.txt
# The last four files are generated by the preparatory steps (extract_contiginfo and extract_samples) of the VCF_darwindow.sh script.

# WARNING: execution of this script will generate as many subdirectories, and run at least as many commands, as there are lines in the file 'mylongcontigs.txt'.
# Therefore, first check the content of mylongcontigs.txt. It should not contain more than 40-odd lines.

# Usage:
# 1. First run all preparatory steps of VCF_darwindow.sh (with the variable 'run_loop' set to FALSE)
# 2. Afterwards check the content of mylongcontigs.txt (do you really want to run the script on all these scaffolds?)
# 3. Check also if all other required files (see above) are present.
# 4. Set within the VCF_darwindow.sh all preparatory steps to FALSE ('do_bgzip', 'do_tabix', 'extract_contiginfo' and 'extract_samples')
# 5. Set the flags 'run_loop' and 'sample_scores' to TRUE. All other boolean flags/variables should be set to FALSE (although depending on the analysis you want to run).
# 6. Afterwards, simply run: ./VCF_darwindow_runparallel.sh &

# Once all runs finished, you can combine the output.
# For instance, say that your scaffold names start with 'HiC_scaffold', then to combine use this command:
# cat HiC_scaffold*/mywindowhe.20000.allsites_roh.txt | grep -v 'contig' > mywindowhe.20000.allsites_roh.txt 
 
# You can add the header with Excel.
# The header should be as follows:
# 'contig startbp endbp totalbp nmiss_1 nsites_1 nhet_1 nhomo_1 nmiss_2 nsites_2 nhet_2 nhomo_2 nmiss_3 nsites_3 nhet_3 nhomo_3' etc



########################################################

MYWORKDIR=$(pwd)

echo "Starting Darwindow runs..."
echo "Creating subdirectories in the directory:"
echo $MYWORKDIR

cut -f1 mylongcontigs.txt > mylongcontigs.names.txt

for mycontigname in $(cat mylongcontigs.names.txt)
do
echo $mycontigname
if [ ! -d "$mycontigname" ]; then
	mkdir $mycontigname
fi
cd $mycontigname
grep "$mycontigname" ../mylongcontigs.txt > mylongcontigs.txt
cp ../myvcfsamples.txt ./
cp ../mycontiglengths.txt ./
cp ../mywindowheader.txt ./
cp ../VCF_darwindow.sh ./
./VCF_darwindow.sh &
cd $MYWORKDIR
done
echo "Started all analyses per contig/scaffold..."
